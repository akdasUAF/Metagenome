#!/bin/bash
#SBATCH --job-name=Busco   # A name for your job (changed to reflect Conda)
#SBATCH --partition=t1small           # Specify the partition/queue you want to use (e.g., debug, standard, highmem)
#SBATCH --nodes=1                    # Request 1 node
#SBATCH --ntasks-per-node=1          # Request 1 task per node (your script runs as a single process)
#SBATCH --cpus-per-task=24           # Request 24 CPUs (cores) for your task
#SBATCH --mem=64G                    # Request 64GB of memory. Adjust based on your expected memory usage.
#SBATCH --error=busco_%j.err     # Standard error file (will be named metaquast_JOBID.err)
#SBATCH --output=busco_%j.out    # Standard output file (will be named metaquast_JOBID.out)
#SBATCH --mail-type=END,FAIL         # Email notifications for job completion or failure
#SBATCH --mail-user=wwinnett@alaska.edu

# Load necessary modules (if required)


# --- Conda Environment Setup ---
# Define the name of your Conda environment
CONDA_ENV_NAME="ana_busco"

# Path to your Miniconda/Anaconda installation if not in default PATH
# If `conda` command is not found, uncomment and adjust this line.
# export PATH="/path/to/your/miniconda3/bin:$PATH"

# Initialize Conda for the current shell session
# This is crucial for `conda activate` to work in a non-interactive script.
# Option 1: eval "$(conda shell.bash hook)" (Recommended for modern Conda)
eval "$(conda shell.bash hook)"
# Option 2: source your conda.sh (Alternative, if Option 1 doesn't work or for older Conda)
# source /path/to/your/miniconda3/etc/profile.d/conda.sh # <--- Adjust this path if needed

# Activate the Conda environment
conda activate "$CONDA_ENV_NAME" || { echo "Error: Failed to activate Conda environment '$CONDA_ENV_NAME'. Exiting."; exit 1; }

# --- End Conda Environment Setup ---





module load slurm


# Define variables for input arguments
# When submitting the job, you will provide these as arguments to sbatch:
# s sbatch your_slurm_script.sh <contigs_path> <output_path> <reference_list_file_or_NO_REFERENCE>
path_contigs=$1
path_output=$2
path_log=$3

# Check if the correct number of arguments are provided (still 3)
if [ $# -ne 3 ]; then
  echo "Usage: sbatch $0 <contigs_path> <output_path> <log_path>"
  exit 1
fi



# Check for the correct number of arguments
if [ $# -ne 3 ]; then
  echo "Usage: $0 <raw_path> <MAG_path> <path_log>"
  exit 1
fi


# Run the BUSCO command
busco -m genome --auto-lineage-prok -c 24 -i $path_contigs -o $path_output | tee $path_log
