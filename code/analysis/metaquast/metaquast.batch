#!/bin/bash

#SBATCH --job-name=MetaQuast_Conda   # A name for your job (changed to reflect Conda)
#SBATCH --partition=t1small           # Specify the partition/queue you want to use (e.g., debug, standard, highmem)
#SBATCH --nodes=1                    # Request 1 node
#SBATCH --ntasks-per-node=1          # Request 1 task per node (your script runs as a single process)
#SBATCH --cpus-per-task=24           # Request 24 CPUs (cores) for your task
#SBATCH --mem=64G                    # Request 64GB of memory. Adjust based on your expected memory usage.
#SBATCH --error=metaquast_%j.err     # Standard error file (will be named metaquast_JOBID.err)
#SBATCH --output=metaquast_%j.out    # Standard output file (will be named metaquast_JOBID.out)
#SBATCH --mail-type=END,FAIL         # Email notifications for job completion or failure
#SBATCH --mail-user=your_email@example.com # Replace with your actual email address

# --- Conda Environment Setup ---
# Define the name of your Conda environment
CONDA_ENV_NAME="ana_metaquast"

# Path to your Miniconda/Anaconda installation if not in default PATH
# If `conda` command is not found, uncomment and adjust this line.
# export PATH="/path/to/your/miniconda3/bin:$PATH"

# Initialize Conda for the current shell session
# This is crucial for `conda activate` to work in a non-interactive script.
# Option 1: eval "$(conda shell.bash hook)" (Recommended for modern Conda)
eval "$(conda shell.bash hook)"
# Option 2: source your conda.sh (Alternative, if Option 1 doesn't work or for older Conda)
# source /path/to/your/miniconda3/etc/profile.d/conda.sh # <--- Adjust this path if needed

# Activate the Conda environment
conda activate "$CONDA_ENV_NAME" || { echo "Error: Failed to activate Conda environment '$CONDA_ENV_NAME'. Exiting."; exit 1; }

# --- End Conda Environment Setup ---


# Define variables for input arguments
# When submitting the job, you will provide these as arguments to sbatch:
# s sbatch your_slurm_script.sh <contigs_path> <output_path> <reference_list_file_or_NO_REFERENCE>
path_contigs=$1
path_output=$2
reference_identifier=$3 # This can now be a file path OR "NO_REFERENCE"

# Check if the correct number of arguments are provided (still 3)
if [ $# -ne 3 ]; then
  echo "Usage: sbatch $0 <contigs_path> <output_path> <reference_list_file_or_NO_REFERENCE>"
  echo "  <reference_list_file_or_NO_REFERENCE>: Provide a path to a file containing reference paths (one per line),"
  echo "                                          OR type 'NO_REFERENCE' (case-sensitive) to run without a specified reference."
  exit 1
fi

# Construct the reference string for MetaQuast
reference_args=""
run_with_reference=true # Flag to track if we're using a reference

if [ "$reference_identifier" == "NO_REFERENCE" ]; then
    echo "Running MetaQuast without a user-provided reference."
    run_with_reference=false
elif [ -f "$reference_identifier" ]; then
    echo "Reference list file '$reference_identifier' found. Reading references..."
    while IFS= read -r line; do
        trimmed_line=$(echo "$line" | xargs)
        if [ -n "$trimmed_line" ]; then
            reference_args+=" -r $trimmed_line"
        fi
    done < "$reference_identifier"

    # Check if any references were actually found in the file
    if [ -z "$reference_args" ]; then
        echo "Warning: Reference list file '$reference_identifier' was provided but contains no valid reference paths. Running without a user-provided reference."
        run_with_reference=false
    fi
else
    echo "Error: The third argument ('$reference_identifier') is neither 'NO_REFERENCE' nor a valid file path."
    exit 1
fi

echo "Starting MetaQuast analysis..."
echo "Conda environment activated: $(conda env list | grep '*' | awk '{print $1}')"
echo "Contigs path: $path_contigs"
echo "Output path: $path_output"
if [ "$run_with_reference" = true ]; then
    echo "Reference mode: With user-provided references from: $reference_identifier"
    echo "References to be used: $reference_args"
else
    echo "Reference mode: Without user-provided references (MetaQuast will attempt auto-detection)."
fi
echo "Running on host: $(hostname)"
echo "Current directory: $(pwd)"
echo "SLURM Job ID: $SLURM_JOB_ID"

# Execute the MetaQuast command
# The python3 command will now point to the one inside your activated Conda environment
# Removed --glimmer as it's not a standard MetaQUAST option and might cause errors.
# If you intended gene prediction, MetaQUAST does it automatically or via --gene-finding.
if [ "$run_with_reference" = true ]; then
    eval "python3 tools/analysis/quast/metaquast.py -t 24 -o \"$path_output\" \"$path_contigs\" $reference_args"
else
    eval "python3 tools/analysis/quast/metaquast.py -t 24 -o \"$path_output\" \"$path_contigs\""
fi

# Deactivate the Conda environment (optional, but good practice if you don't need it later in the script)
conda deactivate

echo "MetaQuast analysis completed!"