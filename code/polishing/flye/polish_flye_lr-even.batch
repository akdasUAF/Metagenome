#!/bin/bash
#SBATCH --partition=t1small
#SBATCH --ntasks=24
#SBATCH --tasks-per-node=24
#If running on the bio or analysis queue add:
####SBATCH --mem=214G
#SBATCH --mail-user=wwinnett@alaska.edu
#SBATCH --mail-type=BEGIN
#SBATCH --mail-type=END
#SBATCH --mail-type=FAIL
#SBATCH --job-name="panmeta_align_flye_lr-even"
#SBATCH --output=data/flye/logs/polished/log_slurm_flye_lr-even_%j.log
#SBATCH --error=data/flye/logs/polished/log_slurm_flye_lr-even_%j_err.log

## Clean out any modules, then reload slurm
# Since conda will be used, no other modules will be loaded
module purge
module load slurm

ulimit -l unlimited

# Define variables for dataset and assembler
dataset="lr-even"
assembler="flye"

# Define paths using the variables for better maintainability
RAW_READS="data/raw/${dataset}/${dataset}_raw.fastq"
DRAFT_ASSEMBLY="data/${assembler}/${dataset}/assembly.fasta"
POLISHED_DIR="data/${assembler}/${dataset}/polished"
MEDAKA_OUTPUT_DIR="data/${assembler}/${dataset}/medaka" # Medaka has its own output dir
RACON_OVERLAP="${POLISHED_DIR}/overlap_${assembler}_${dataset}.paf"
RACON_POLISHED_ASSEMBLY="${POLISHED_DIR}/${dataset}_assembly_racon.fasta"

# Define the path for the detailed command log file
LOG_DIR="data/${assembler}/logs/polished" # Define log directory
mkdir -p "${LOG_DIR}" # Ensure log directory exists

# Clear the log file at the start of the script (MOVED THIS LINE)
> "${path_log}"

echo "Script started at $(date)" | tee -a "${path_log}" # Log script start time

# --- DIAGNOSTIC: Check PATH before any Conda actions ---
echo "$(date '+%Y-%m-%d %H:%M:%S') [DEBUG] PATH before sourcing conda.sh: $PATH" | tee -a "${path_log}"

# --- IMPORTANT CHANGE HERE: Source conda.sh directly with 'source' keyword ---
CONDA_ACTIVATE_SCRIPT="/home/wwinnett/miniconda3/etc/profile.d/conda.sh" # MAKE SURE THIS IS YOUR EXACT PATH!
if [ -f "${CONDA_ACTIVATE_SCRIPT}" ]; then
    source "${CONDA_ACTIVATE_SCRIPT}" # Use 'source' keyword
    echo "$(date '+%Y-%m-%d %H:%M:%S') [DEBUG] PATH after sourcing conda.sh: $PATH" | tee -a "${path_log}"
else
    echo "$(date '+%Y-%m-%d %H:%M:%S') [ERROR] Conda activate script not found at ${CONDA_ACTIVATE_SCRIPT}" | tee -a "${path_log}"
    exit 1
fi

# --- IMPORTANT CHANGE: Activate base and deactivate to initialize Conda fully ---
echo "$(date '+%Y-%m-%d %H:%M:%S') [DEBUG] Attempting to activate/deactivate base to init Conda functions..." | tee -a "${path_log}"
conda activate base # This should change the PATH
echo "$(date '+%Y-%m-%d %H:%M:%S') [DEBUG] PATH after activating base: $PATH" | tee -a "${path_log}"
conda deactivate # This should revert/clean the PATH
echo "$(date '+%Y-%m-%d %H:%M:%S') [DEBUG] PATH after deactivating base: $PATH" | tee -a "${path_log}"
echo "$(date '+%Y-%m-%d %H:%M:%S') [DEBUG] Conda should now be fully initialized." | tee -a "${path_log}"


# Create a directory for output
mkdir -p "${POLISHED_DIR}" | tee -a "${path_log}"


###$~~~~~#~####$~~~~~#~####$~~~~~#~####$~~~~~#~#
echo "########## Running Racon Stage ##########" | tee -a "${path_log}"

###  Run Minimap First to generate an alignment
# Setup environment
echo "$(date '+%Y-%m-%d %H:%M:%S') [DEBUG] PATH before align_minimap2 activation: $PATH" | tee -a "${path_log}"
conda activate align_minimap2 | tee -a "${path_log}"
echo "$(date '+%Y-%m-%d %H:%M:%S') [DEBUG] PATH after align_minimap2 activation: $PATH" | tee -a "${path_log}"

echo "Running Minimap2..." | tee -a "${path_log}"
minimap2 \
    -ax map-ont \
    -t 24 \
    "${DRAFT_ASSEMBLY}" \
    "${RAW_READS}" \
    > "${RACON_OVERLAP}" 2>&1 | tee -a "${path_log}"


### Racon into same folder
# Setup environment
echo "$(date '+%Y-%m-%d %H:%M:%S') [DEBUG] PATH before racon activation: $PATH" | tee -a "${path_log}"
conda activate racon | tee -a "${path_log}"
echo "$(date '+%Y-%m-%d %H:%M:%S') [DEBUG] PATH after racon activation: $PATH" | tee -a "${path_log}"

echo "Running Racon..." | tee -a "${path_log}"
racon \
    -t 24 \
    "${RAW_READS}" \
    "${RACON_OVERLAP}" \
    "${DRAFT_ASSEMBLY}" \
    > "${RACON_POLISHED_ASSEMBLY}" 2>&1 | tee -a "${path_log}"


###$~~~~~#~####$~~~~~#~####$~~~~~#~####$~~~~~#~#
echo "########## Running Medaka Stage ##########" | tee -a "${path_log}"

# Setup environment
echo "$(date '+%Y-%m-%d %H:%M:%S') [DEBUG] PATH before medaka activation: $PATH" | tee -a "${path_log}"
conda activate medaka | tee -a "${path_log}"
echo "$(date '+%Y-%m-%d %H:%M:%S') [DEBUG] PATH after medaka activation: $PATH" | tee -a "${path_log}"

mkdir -p "${MEDAKA_OUTPUT_DIR}" | tee -a "${path_log}"

echo "Running Medaka consensus..." | tee -a "${path_log}"
medaka_consensus \
    -i "${RAW_READS}" \
    -d "${RACON_POLISHED_ASSEMBLY}" \
    -o "${MEDAKA_OUTPUT_DIR}" \
    -m r941_min_sup_g507 \
    -t 24 2>&1 | tee -a "${path_log}"


###$~~~~~#~####$~~~~~#~####$~~~~~#~####$~~~~~#~#
echo "########## Running Quast Stage ##########" | tee -a "${path_log}"
# Setup environment
echo "$(date '+%Y-%m-%d %H:%M:%S') [DEBUG] PATH before quast activation: $PATH" | tee -a "${path_log}"
conda activate medaka | tee -a "${path_log}"
echo "$(date '+%Y-%m-%d %H:%M:%S') [DEBUG] PATH after quast activation: $PATH" | tee -a "${path_log}"

# Placeholder for Quast command (you can uncomment and adjust when you add the full command)
# QUAST_OUTPUT_DIR="data/${assembler}/${dataset}/quast_results"
# mkdir -p "$(dirname "${QUAST_OUTPUT_DIR}")" | tee -a "${path_log}" # Ensure parent dir for quast exists
# echo "Running Quast..." | tee -a "${path_log}"
# quast.py \
#     "${MEDAKA_OUTPUT_DIR}/consensus.fasta" \
#     -o "${QUAST_OUTPUT_DIR}" \
#     -t 24 2>&1 | tee -a "${path_log}"

echo "Script finished at $(date)" | tee -a "${path_log}"

#### Ignore this this is for later. But keep it
###$~~~~~#~####$~~~~~#~####$~~~~~#~####$~~~~~#~#
########## Run Busco
# Setup environment
# conda activate ana_busco

# busco --auto-lineage-prok \
#   -c 24 \
#   -i $RAW_READS \
#   -o $path_output \
#   -m genome \
#   | tee $path_log